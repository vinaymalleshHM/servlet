package com.tyss.empspringmvc.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import com.tyss.empspringmvc.dto.EmployeeInfoBean;

public class EmployeeDAOImpl implements EmployeeDAO {
	
	private EntityManagerFactory factory = Persistence.createEntityManagerFactory("employee-unit");
	private BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
	
	
	@Override
	public EmployeeInfoBean auth(String email, String password) {
		EntityManager manager = factory.createEntityManager();
		
		String jpql = "select e from EmployeeInfoBean e where e.email=:email";
		
		TypedQuery<EmployeeInfoBean> query = manager.createQuery(jpql,EmployeeInfoBean.class);
		
		try {
			EmployeeInfoBean bean = query.getSingleResult();
			if (encoder.matches(password, bean.getPassword())) {
				return bean;
			}
			else {
				return null;
			}
			
		} catch (Exception e) {
//			e.printStackTrace();
			System.out.println(e.getMessage());
			for (StackTraceElement element : e.getStackTrace()) {
				System.out.println(element.toString());
			}
			return null;
		}
		
		
	}

	@Override
	public boolean register(EmployeeInfoBean bean) {
		return false;
	}

	@Override
	public void changePassword(int id, String password) {
		
	}

	@Override
	public List<EmployeeInfoBean> search(String name) {
		return null;
	}

}
