package com.tyess.productrestapi.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Repository;

import com.tyess.productrestapi.dto.ProductInfoBean;
import com.tyss.springrest.dto.EmployeeInfoBean;

@Repository
public class ProductDAOImpl implements ProductDAO{
	
	@PersistenceUnit
	private EntityManagerFactory factory ;
	
//	@Autowired
//	private BCryptPasswordEncoder encoder ;

	@Override
	public boolean addProduct(ProductInfoBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		try {
			manager.persist(bean);
			transaction.commit();
			return true;
		} catch (Exception e) {
			System.out.println(e.getMessage());
			for (StackTraceElement element : e.getStackTrace()) {
				System.out.println(element.toString());
			}
			return false;
		}
	}

	@Override
	public boolean removeProduct(int id) {

		EntityManager manager = factory.createEntityManager();	
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		ProductInfoBean bean = manager.find(ProductInfoBean.class, id);
		manager.remove(bean);
		transaction.commit();
		return true;
	}

	@Override
	public boolean updateProduct(ProductInfoBean bean) {
		
		EntityManager manager = factory.createEntityManager();	
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		ProductInfoBean infoBean = manager.find(ProductInfoBean.class, bean.getId());
		infoBean.setName(bean.getName());
		infoBean.setPrice(bean.getPrice());
		infoBean.setQuantity(bean.getQuantity());
		infoBean.setImageURL(bean.getImageURL());
		manager.persist(infoBean);
		transaction.commit();
		return true;
	}

	@Override
	public List<ProductInfoBean>  getProductByName(String name) {
		EntityManager manager = factory.createEntityManager();
		String jpql = "select e from ProductInfoBean e where e.name=:ename";
		TypedQuery<ProductInfoBean> query = manager.createQuery(jpql, ProductInfoBean.class);
		query.setParameter("ename", name);
		return query.getResultList();
		
	}

	@Override
	public void getAllProduct() {
		EntityManager manager = factory.createEntityManager();
		String jpql = "select e from ProductInfoBean e";
		TypedQuery<ProductInfoBean> query = manager.createQuery(jpql, ProductInfoBean.class);
		query.setParameter("ename", name);
		return query.getResultList();
		
	}

}
